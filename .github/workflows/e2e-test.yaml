name: E2E Testing
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: E2E Testing
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Install aws-iam-authenticator
        working-directory: test/
        run: |
          curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
          chmod +x ./aws-iam-authenticator
          mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator &&  export PATH=$PATH:$HOME/bin
          aws-iam-authenticator version
          
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17

      - name: Setup dependencies
        id: setup-dependencies
        working-directory: test/
        run: |
          go get -v -t -d ./... && go mod tidy
          echo ::set-output name=exit_code::$?

      - name: E2E test
        working-directory: test/
        run: |
          # this is required to use aws-iam-authenticator.
          export PATH=$PATH:$HOME/bin
          go test ./e2etest -v -timeout 40m > e2e-test.log -run Bamboo
      - name: Clean up test
        if: steps.setup-dependencies.outputs.exit_code == 0
        working-directory: test/
        run: |
          # this is required to use aws-iam-authenticator.
          export PATH=$PATH:$HOME/bin
          go test ./e2etest -v -timeout 40m > e2e-test-cleanup.log -run Cleanup

      - name: Upload test log files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: e2e-test-log-file
          path: |
            test/e2e-test.log
            test/e2e-test-cleanup.log
